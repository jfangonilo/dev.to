---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/search?key=<YOUTUBE_DATA_KEY>&maxResults=50&part=snippet&publishedAfter=2019-03-28T22:50:08Z&q=This%20is%20a%20test&type=video&videoEmbeddable=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.3
      X-Honeycomb-Trace:
      - 1;dataset=,trace_id=0359bbe5-7790-4bba-8e43-f97ccef229c2,parent_id=23a044f6-4f3c-4091-b717-85cb85998e58,context=e30=
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Sat, 28 Mar 2020 22:50:08 GMT
      Date:
      - Sat, 28 Mar 2020 22:50:08 GMT
      Cache-Control:
      - private, max-age=120, must-revalidate, no-transform
      Etag:
      - '"ksCrgYQhtFrXgbHAhi9Fo5t0C2I/aEh7bol0163ZombCQh_wy16FB3w"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="46,43",h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,h3-T050=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Sat, 28 Mar 2020 22:50:09 GMT
recorded_with: VCR 5.1.0
