---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/search?key=<YOUTUBE_DATA_KEY>&maxResults=50&part=snippet&publishedAfter=2019-03-27T22:13:15-06:00&q=westworld%20robots%20sdagsjkhgskjdkjsdgsdg&type=video&videoEmbeddable=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.3
      X-Honeycomb-Trace:
      - 1;dataset=,trace_id=9fd7fb38-0492-48a8-839d-4d2260eb96e0,parent_id=99561b68-6805-4969-94e3-9892a3e7c463,context=e30=
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Sat, 28 Mar 2020 04:13:16 GMT
      Date:
      - Sat, 28 Mar 2020 04:13:16 GMT
      Cache-Control:
      - private, max-age=120, must-revalidate, no-transform
      Etag:
      - '"ksCrgYQhtFrXgbHAhi9Fo5t0C2I/bEp8TJtXaQPPaCi1eBoGyYvAK5k"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="46,43",h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,h3-T050=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        {
         "kind": "youtube#searchListResponse",
         "etag": "\"ksCrgYQhtFrXgbHAhi9Fo5t0C2I/bEp8TJtXaQPPaCi1eBoGyYvAK5k\"",
         "regionCode": "US",
         "pageInfo": {
          "totalResults": 0,
          "resultsPerPage": 50
         },
         "items": []
        }
    http_version: null
  recorded_at: Sat, 28 Mar 2020 04:13:16 GMT
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/search?key=<YOUTUBE_DATA_KEY>&maxResults=50&part=snippet&publishedAfter=2019-03-27T22:13:30-06:00&q=webdev%20java%20career&type=video&videoEmbeddable=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.3
      X-Honeycomb-Trace:
      - 1;dataset=,trace_id=9fd7fb38-0492-48a8-839d-4d2260eb96e0,parent_id=ec27a655-7884-4ab1-b404-387f1ab06e00,context=e30=
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Sat, 28 Mar 2020 04:13:30 GMT
      Date:
      - Sat, 28 Mar 2020 04:13:30 GMT
      Cache-Control:
      - private, max-age=120, must-revalidate, no-transform
      Etag:
      - '"ksCrgYQhtFrXgbHAhi9Fo5t0C2I/cbl77lIDaNP7Pzl6Sgm8E8l-9F0"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="46,43",h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,h3-T050=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Sat, 28 Mar 2020 04:13:30 GMT
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/search?key=<YOUTUBE_DATA_KEY>&maxResults=50&part=snippet&publishedAfter=2019-03-27T22:13:48-06:00&q=webdev%20java%20career&type=video&videoEmbeddable=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.3
      X-Honeycomb-Trace:
      - 1;dataset=,trace_id=9fd7fb38-0492-48a8-839d-4d2260eb96e0,parent_id=2084fcdb-738c-49b8-93fb-f4eb0fbc5200,context=e30=
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Sat, 28 Mar 2020 04:13:48 GMT
      Date:
      - Sat, 28 Mar 2020 04:13:48 GMT
      Cache-Control:
      - private, max-age=120, must-revalidate, no-transform
      Etag:
      - '"ksCrgYQhtFrXgbHAhi9Fo5t0C2I/IJVjvR9t8kxHj1RQgFX6Sz4JCoE"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="46,43",h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,h3-T050=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Sat, 28 Mar 2020 04:13:49 GMT
recorded_with: VCR 5.1.0
