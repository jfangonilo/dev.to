---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/search?key=<YOUTUBE_DATA_KEY>&maxResults=50&part=snippet&q=westworld%20robots&type=video&videoEmbeddable=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.3
      X-Honeycomb-Trace:
      - 1;dataset=,trace_id=4203f7fc-c64e-459b-9eef-adf9ecaf5436,parent_id=862745cd-8947-4680-8a88-55beb946c611,context=e30=
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 403
      message: Forbidden
    headers:
      Expires:
      - Thu, 26 Mar 2020 23:43:15 GMT
      Date:
      - Thu, 26 Mar 2020 23:43:15 GMT
      Cache-Control:
      - private, max-age=120, must-revalidate, no-transform
      Etag:
      - '"ksCrgYQhtFrXgbHAhi9Fo5t0C2I/A_VQJlySELKtIFVIXO6y_qUPXYw"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 25 Mar 2020 23:34:36 GMT
      Expires:
      - Wed, 25 Mar 2020 23:34:36 GMT
      Cache-Control:
      - private, max-age=0
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="46,43",h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,h3-T050=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 26 Mar 2020 23:43:16 GMT
recorded_with: VCR 5.1.0
